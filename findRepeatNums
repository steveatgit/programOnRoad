一个有序数组，判断其中是否有重复元素，如果有返回其起始和结束的位置，如果没有则返回-1, -1
wqu-m01:programOnRoad wqu$ ./a.out 
4 7 
wqu-m01:programOnRoad wqu$ cat findRepeatNums.cpp 
#include<iostream>
#include<vector>
using namespace std;

void findRepeatNum(vector<int> &vec, int &begin, int &end)
{
	vector<int> hash(vec.size(), 0);
	for(int i=0;i<vec.size();i++) {
		if(hash[vec[i]] != 0) {
			begin = i-1;
			for(int j = i+1;j<vec.size();j++) {
				if(vec[i] == vec[j]) {
					end = j;
				} else {
					break;
				}
			}
			return;
		}
		hash[vec[i]]++;
	}
	return;
}

int main()
{
	vector<int> vec;
	for(int i=1;i<=5;i++) {
		vec.push_back(i);
	}
	vec.push_back(5);
	vec.push_back(5);
	vec.push_back(5);
	int begin = -1, end = -1;
	findRepeatNum(vec, begin, end);
	cout<<begin<<' '<<end<<' '<<endl;
	return 0;
}
